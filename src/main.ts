import { ListFile } from './listfile';
import { Html } from './html';




/**
 * The main program.
 */
class Startup {

    /// String containing all whitespaces.
    protected static whiteSpaces = ' \t\n\r';

    /// The disassembler instance.
    protected static listfile: ListFile;

    // The title to be used for the output.
    protected static title = '';

    // The input file.
    protected static listFileName: string;

    /**
     * Main function. Called on startup.
     */
    public static main(): number {
  
        this.printHelp();

        // Get arguments
        const 
        args = process.argv.splice(2);
        this.processArgs(args);

        // Get filename 
        const listfile = new ListFile(this.listFileName);

        // Loop all exports
        const exports = listfile.getExports();

        // Get the line numbers for all (export) labels
        listfile.addLineNumbers(exports);

        // Get the text descriptions.
        exports.setDescriptions(listfile.lines);

        // Write the html output
        const html = new Html(exports, this.title);

        return 0;
    }


    /**
     * Processes the command line arguments or the arguments read from a file.
     * @param args List of arguments.
     */
    protected static processArgs(args: Array<string>) {
        // Iterate all arguments
        let arg;
        let path;
        let addressString;
        let addr;
        let text;
        let value;
        while(arg = args.shift()) {
            // Check option
            switch(arg) {
                // Help
                case '--help':
                case '-help':
                case '-h':
                    this.printHelp();
                    process.exit(0);
                    break;

                // Version
                case '--version':
                case '-version':
                case '-v':
                    const pckg = require('../package.json');
                    console.log('Version: ' + pckg.version);
                    process.exit(0);
                    break;

                // Title
                case '--title':
                    this.title = args.shift() as string;
                    if(!this.title) {
                        throw arg + ': Expected a title.';
                    }
                    break;

                default:
                    if(this.listFileName || arg.startsWith('-'))
                        throw "Unknown argument: '" + arg + "'";
                    // Interprete as file name
                    this.listFileName = arg;
            }
        }

        // Print help if no filename given
        if(!this.listFileName) {
            this.printHelp();
            process.exit(1);
        }
    }


    /**
     * Prints command line help.
     */
    protected static printHelp() {
        console.log(`
This simple documentation tool for assembler files takes the comments above labels, extracts them and generates a html output which is easy to navigate.
You can decide what sub routines will be documented. Only labels which are marked with EXPORT are extracted.
In order for this to work you need a list file that was generated by sjasmplus.

Example usage:
$ sjasmplus-api-doc-tool -title "My Great Library API" my_great_lib.list

General usage:
sjasmplus-api-doc-tool [options] list-file-name
Options:
    -h|-help|--help: Prints this help.
    -v|-version|--version: Prints the version number.
    --title <title>: Add the <title> to the generated html file.
`);
    }

}